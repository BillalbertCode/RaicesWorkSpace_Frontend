/* usar Sass para mayor fluides con bootstrap */
:root {
    --metallic-blue: #4567b7;
    --metallic-blue-dark: #2f4f7f;
}


.bg-metallic {
    background-color: var(--metallic-blue) !important;
}

.bg-metallic-animation {
    background: linear-gradient(275deg, var(--metallic-blue-dark), var(--metallic-blue), var(--metallic-blue-dark), var(--metallic-blue-dark));
    background-size: 600% 600%;

    animation: reflex 30s linear infinite;

}

/* iconos medianos con animacion hover de reflexion*/
.iconLink {
    width: 40px;
    height: 40px;
    color: currentColor;
    filter: drop-shadow(2px 2px 2px rgba(92, 91, 91, 0.5));
}

.iconLink-black {
    width: 40px;
    height: 40px;
    color: currentColor;
    filter: drop-shadow(2px 2px 2px rgba(92, 91, 91, 0.5));
}

.iconLink:hover {
    color: currentColor;
    filter: drop-shadow(2px 2px 2px rgba(255, 255, 255, 0));
    transform: scale(1.2);
    animation: reflexColor 4s linear;
}

.iconLink-black:hover {
    color: currentColor;
    filter: drop-shadow(2px 2px 2px rgba(255, 255, 255, 0));
    transform: scale(1.2);
    animation: reflexColorBlack 4s linear;
}

@keyframes reflexColorBlack {
    0% {
        color: currentColor;
        transform: scale(1);
        filter: brightness(100%);
    }

    3% {
        transform: scale(1.2);
    }

    20% {
        color: currentColor;
        filter: brightness(100%);
        filter: contrast(100%);

    }

    40% {
        filter: brightness(400%);
        filter: contrast(0%);

    }

    55% {
        filter: brightness(100%);
        filter: contrast(100%);

    }
}

@keyframes reflexColor {
    0% {
        color: currentColor;
        transform: scale(1);
        filter: brightness(100%);
    }

    3% {
        transform: scale(1.2);
    }

    20% {
        color: currentColor;
        filter: brightness(100%);

    }

    40% {
        filter: brightness(150%);

    }

    55% {
        filter: brightness(100%);

    }
}

/* iconos peque√±os*/
.iconLink-sm {
    width: 25px !important;
    height: 25px !important;
}

/* Profile atributes */

/* Profile small */
.profile{
    border:solid #000 2px ;
    border-radius: 50%;
    width: 60px;
    height:60px;
}
/* Input textarea */
.textareaArticle{
    border:  2px #00000000 solid !important;
    border-bottom:2px #dbdbdb solid !important;
    border-radius:0px !important;
    box-sizing: border-box !important;
    height:100px  !important;
    transition: border ease 0.5s;
    resize: none;
}
.textareaArticle:focus{
    box-sizing: border-box !important;
    border-bottom:2px #000 solid !important;
    box-shadow: 0px 0px 0px rgb(0, 0, 0);
}
.textareaArticle.is-invalid{
    border-bottom:2px #e23f3f solid !important;
}
.textareaArticle.is-invalid:focus{
    box-shadow: 0px 0px 0px rgb(0, 0, 0);
    
}
/* Reflexion linear hacia la izquierda */
@keyframes reflex {

    0%,
    45% {
        background-position: 0% 0%
    }

    50% {
        background-position: 100% 46%
    }

    60% {
        background-position: 140% 100%
    }

    100% {
        background-position: 140% 100%;
        transition: all 0.5 ease;
    }
}

.profileBackground{
    filter:blur(1px) brightness(50%);
}
.component-container.active{
    height: 500px;
    transition: height ease 1s;
}
.component-container {
    position: relative;
    width: 100%; 
    height: 200px; 
    transition: height ease 1s;
}

.card-img-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.card-img {
    object-fit: cover;
    width: 100%;
    height: 100%;
}

.overlay-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    text-align: start;
    color: white;
}